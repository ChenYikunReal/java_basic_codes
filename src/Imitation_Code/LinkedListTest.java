package Imitation_Code;

import java.util.*;

public class LinkedListTest {
	public static void main(String[] args) {
		LinkedList books = new LinkedList();
		//将字符串元素添加到队列的尾部
		books.offer("高等数学");
		//将一个字符串元素添加到栈的顶部
		books.push("线性代数");
		//将字符串元素添加到队列的头部（相当于栈的顶部）
		books.offerFirst("离散数学");
		//以List的方式（按索引访问的方式）来遍历集合元素
		for (int i = 0; i < books.size(); i++) {
			System.out.println("遍历中：" + books.get(i));
		}
		//访问并不删除栈顶的元素
		System.out.println(books.peekFirst());
		//访问并不删除队列的最后一个元素
		System.out.println(books.peekLast());
		//将栈顶的元素弹出栈
		System.out.println(books.pop());
		//下面输出将看到队列中第一个元素被删除
		System.out.println(books);
		//访问并删除队列的最后一个元素
		System.out.println(books.pollLast());
		//下面输出：[线性代数]
		System.out.println(books);
	}

}
